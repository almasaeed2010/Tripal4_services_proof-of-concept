version: "3.5"

networks:
  tripal-kong:
    name: tripal-kong
    driver: bridge

services:
## Database
  #postgres 
  kong-database:
    image: postgres:9.6-alpine
    restart: always
    networks:
      - tripal-kong
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    ports:

      - "5433:5432"

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

##Kong
  #db migration: kong
  
  kong-migration:
    image: kong:latest
    command: "kong migrations up"
    networks:
      - tripal-kong
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on:
      - kong-database

  #kong
  
  kong:
    image: kong:latest
    restart: always
    networks:
      - tripal-kong
    environment:
      KONG_PG_HOST: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "8001:8001"
      - "8000:8000"

##Konga
 #db migration: konga

#  konga-migration:
#    image: pantsel/konga:next
#    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
#    networks:
#      - tripal-kong
#    restart: on-failure
#    links:
#      - kong-database
#    depends_on:
#      - kong-database
 
## Konga (Admin GUI)
  
#  konga:
#    image: pantsel/konga:next
#    restart: always
#    networks:
#        - tripal-kong
#    environment:
#      DB_ADAPTER: postgres
#      DB_HOST: kong-database
#      DB_USER: kong
#      TOKEN_SECRET: R0uuaHAi5m_8oTwzYIcfJaucZBPxDUhiw3_0SN_vFv
#      DB_DATABASE: konga_db
#      NODE_ENV: production
#    depends_on:
#      - kong-database
#    ports:
#      - "1337:1337"

